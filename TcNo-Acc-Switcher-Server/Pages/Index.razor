@*TcNo Account Switcher - A Super fast account switcher
    Copyright (C) 2019-2021 TechNobo (Wesley Pyburn)
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses />.*@

@page "/"
@using TcNo_Acc_Switcher_Server.Data
@using TcNo_Acc_Switcher_Server.Pages.General
@using System.Security.Principal
@inject IJSRuntime _jsRuntime
@{ _appData.SetActiveIJsRuntime(_jsRuntime); }
@inject NavigationManager _navManager
@{ _appData.SetActiveNavMan(_navManager); }
@inject AppData _appData
@inject AppSettings _appSettings

@inject Data.Settings.BattleNet _battleNet
@inject Data.Settings.Epic _epic
@inject Data.Settings.Origin _origin
@inject Data.Settings.Riot _riot
@inject Data.Settings.Steam _steam
@inject Data.Settings.Ubisoft _ubisoft

@inject IStringLocalizer<App> _locale

@if (AppSettings.Instance.UpdateAvailable)
{
    <div class="updateBar" @onclick="UpdateNow">
        <span>Update available! Click here to start it.</span>
    </div>
}
@if (true)
{
    <div class="updateBar" @onclick="UpdateNow">
        <span>@_locale["update"]</span>
    </div>
}

@if (!_showSettings)
{
    <ContextMenu ContextMenuString=@AppSettings.Instance.PlatformContextMenu />
    <div class="platformContainer">
        <div class="platform_list">
            @foreach (var platform in AppSettings.PlatformList)
            {
                @if (!AppSettings.Instance.DisabledPlatforms.Contains(platform))
                {
                    <div class="button platformIcon platform_list_item" id="@("Switcher" + platform)" @onclick="() => Check(platform)">
                        <svg viewBox="0 0 2084 2084" draggable="false" alt="@(platform)" class="@($"ico{platform}BG")">
                            <use href="@($"img/platform/{platform.ToLowerInvariant()}.svg#TEXT")" class="@($"ico{platform}Text")"></use>
                            <use href="@($"img/platform/{platform.ToLowerInvariant()}.svg#FG")" class="@($"ico{platform}FG")"></use>
                            <use href="img/platform/glass.svg#GLASS" class="icoGlass @($"ico{platform}Glass")"></use>
                        </svg>
                    </div>
                }
            }
        </div>
    </div>

    <div class="acc_list_actionbar">
        <div>
            <div class="button" id="btnSettings" onclick="location = 'Settings'">
                <svg viewBox="0 0 60 60" draggable="false" alt="Settings" class="footerIcoSettings">
                    <use href="img/icons/ico_settings.svg#icoSettings"></use>
                </svg>
            </div>
            <div class="button" id="btnHelp" onclick="showModal('info');">
                <svg viewBox="0 0 60 60" draggable="false" alt="Question" class="footerIcoQuestion">
                    <use href="img/icons/ico_question.svg#icoQuestion"></use>
                </svg>
            </div>
        </div>
    </div>

}

@code
{
    private bool _showSettings = false;

    // This is run before everything is painted on, so that it can get the correct values for the CSS Block.
    protected override void OnParametersSet()
    {
        if (!GeneralFuncs.WindowSettingsValid())
        {
            // Do something here if necessary.
            // For now this is just being used to load settings.
        }

        // Checks whether program is running as Admin or not
        var securityIdentifier = WindowsIdentity.GetCurrent().Owner;
        if (securityIdentifier is not null) AppSettings.Instance.CurrentlyElevated = securityIdentifier.IsWellKnown(WellKnownSidType.BuiltinAdministratorsSid);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _appData.WindowTitle = "TcNo Account Switcher";
        if (firstRender)
        {
            await GeneralFuncs.HandleQueries();
            await AppData.ActiveIJsRuntime.InvokeVoidAsync("initContextMenu");
            //await AppData.ActiveIJsRuntime.InvokeVoidAsync("initAccListSortable");
        }
    }

}